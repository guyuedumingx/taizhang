"""add ehr_id to users

Revision ID: 08dd1f31fe88
Revises: 5cd18eb7121b
Create Date: 2025-03-09 00:56:22.139593

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic import context

# revision identifiers, used by Alembic.
revision: str = '08dd1f31fe88'
down_revision: Union[str, None] = '5cd18eb7121b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 使用SQLite批处理模式
    # 先添加ehr_id列
    op.add_column('users', sa.Column('ehr_id', sa.String(length=7), nullable=True))
    
    # 为现有用户设置默认的EHR号
    connection = op.get_bind()
    users = connection.execute(sa.text("SELECT id FROM users")).fetchall()
    for i, (user_id,) in enumerate(users):
        ehr_id = f"{user_id:07d}"  # 将用户ID格式化为7位数字
        connection.execute(
            sa.text("UPDATE users SET ehr_id = :ehr_id WHERE id = :id"),
            {"ehr_id": ehr_id, "id": user_id}
        )
    
    # 使用批处理模式完成其余操作
    with op.batch_alter_table('users') as batch_op:
        # 设置非空约束
        batch_op.alter_column('ehr_id', nullable=False)
        
        # 创建索引
        batch_op.create_index(op.f('ix_users_ehr_id'), ['ehr_id'], unique=True)
        
        # 删除email列
        batch_op.drop_index('ix_users_email')
        batch_op.drop_column('email')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 先添加email列
    op.add_column('users', sa.Column('email', sa.VARCHAR(), nullable=True))
    
    # 为现有用户设置默认的email
    connection = op.get_bind()
    users = connection.execute(sa.text("SELECT id, username FROM users")).fetchall()
    for user_id, username in users:
        email = f"{username}@example.com"
        connection.execute(
            sa.text("UPDATE users SET email = :email WHERE id = :id"),
            {"email": email, "id": user_id}
        )
    
    # 使用批处理模式完成其余操作
    with op.batch_alter_table('users') as batch_op:
        # 设置非空约束
        batch_op.alter_column('email', nullable=False)
        
        # 创建索引
        batch_op.create_index('ix_users_email', ['email'], unique=1)
        
        # 删除ehr_id列
        batch_op.drop_index(op.f('ix_users_ehr_id'))
        batch_op.drop_column('ehr_id')
    # ### end Alembic commands ###
